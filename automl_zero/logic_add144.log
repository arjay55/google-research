Random seed = 2081894615
Running evolution experiment (on the T_search tasks)...
indivs=1000, elapsed_secs=4, mean=0.980469, stdev=0.000000, best fit=0.980469,
indivs=11000, elapsed_secs=53, mean=0.958367, stdev=0.144048, best fit=0.980469,
indivs=21000, elapsed_secs=109, mean=0.955888, stdev=0.150968, best fit=0.980469,
indivs=31000, elapsed_secs=166, mean=0.952602, stdev=0.161251, best fit=0.980469,
indivs=41000, elapsed_secs=225, mean=0.929573, stdev=0.215290, best fit=0.980517,
indivs=51000, elapsed_secs=283, mean=0.941105, stdev=0.190552, best fit=0.980517,
indivs=61000, elapsed_secs=341, mean=0.938221, stdev=0.197091, best fit=0.980517,
Experiment done. Retrieving candidate algorithm.
Search fitness for candidate algorithm = 0.980517
Evaluating candidate algorithm from experiment (on T_select tasks)... 
Select fitness for candidate algorithm = 0.980517
Select fitness is the best so far. 

Final evaluation of best algorithm (on unseen tasks)...
Final evaluation fitness (on unseen data) = 0.980517
Algorithm found: 
def Setup():
  s14 = s16 + s12
  s9 = mean(v0)
def Predict():
  s1 = heaviside(s10, 1.0)
  s10 = mean(v3)
def Learn():
  s3 = s0 * s2
  s15 = heaviside(s10, 1.0)
  s14 = s0 + s6
  s10 = s9 + s14
  s11 = mean(v11)
  s6 = s14 * s6

Starting local Bazel server and connecting to it...
Loading: 
Loading: 0 packages loaded
Analyzing: target //:run_search_experiment (1 packages loaded, 0 targets configured)
Analyzing: target //:run_search_experiment (26 packages loaded, 417 targets configured)
INFO: Analyzed target //:run_search_experiment (40 packages loaded, 1466 targets configured).
INFO: Found 1 target...
INFO: Deleting stale sandbox base /home/ubuntu/.cache/bazel/_bazel_ubuntu/5d5d5e021bc1d0875072d389657ba4fc/sandbox
[0 / 233] [Prepa] BazelWorkspaceStatusAction stable-status.txt
[29 / 428] Compiling external/com_google_protobuf/src/google/protobuf/dynamic_message.cc [for host]; 0s linux-sandbox ... (4 actions, 2 running)
[33 / 428] Compiling external/com_google_protobuf/src/google/protobuf/dynamic_message.cc [for host]; 1s linux-sandbox ... (4 actions, 3 running)
[34 / 428] Compiling external/com_google_protobuf/src/google/protobuf/generated_message_reflection.cc; 2s linux-sandbox ... (4 actions running)
[36 / 428] Compiling external/com_google_protobuf/src/google/protobuf/generated_message_reflection.cc; 3s linux-sandbox ... (4 actions running)
[38 / 428] Compiling external/com_google_protobuf/src/google/protobuf/struct.pb.cc; 3s linux-sandbox ... (4 actions running)
[43 / 428] Compiling external/com_google_protobuf/src/google/protobuf/descriptor.cc [for host]; 2s linux-sandbox ... (4 actions running)
[45 / 428] Compiling external/com_google_protobuf/src/google/protobuf/descriptor.cc [for host]; 3s linux-sandbox ... (4 actions running)
[49 / 428] Compiling external/com_google_protobuf/src/google/protobuf/descriptor.cc [for host]; 5s linux-sandbox ... (4 actions running)
[50 / 428] Compiling external/com_google_protobuf/src/google/protobuf/descriptor.cc [for host]; 7s linux-sandbox ... (4 actions running)
[51 / 428] Compiling external/com_google_protobuf/src/google/protobuf/descriptor.cc [for host]; 9s linux-sandbox ... (4 actions running)
[57 / 428] Compiling external/com_google_protobuf/src/google/protobuf/descriptor.cc; 8s linux-sandbox ... (4 actions running)
[63 / 428] Compiling external/com_google_protobuf/src/google/protobuf/compiler/objectivec/objectivec_primitive_field.cc [for host]; 1s linux-sandbox ... (4 actions running)
[71 / 428] Compiling external/com_google_protobuf/src/google/protobuf/compiler/objectivec/objectivec_message.cc [for host]; 1s linux-sandbox ... (4 actions running)
[78 / 428] Compiling external/com_google_protobuf/src/google/protobuf/compiler/php/php_generator.cc [for host]; 2s linux-sandbox ... (4 actions running)
[89 / 428] Compiling external/com_google_protobuf/src/google/protobuf/compiler/objectivec/objectivec_field.cc [for host]; 1s linux-sandbox ... (4 actions running)
[99 / 428] Compiling external/com_google_protobuf/src/google/protobuf/compiler/js/js_generator.cc [for host]; 5s linux-sandbox ... (4 actions running)
[107 / 428] Compiling external/com_google_protobuf/src/google/protobuf/compiler/java/java_helpers.cc [for host]; 1s linux-sandbox ... (4 actions running)
[122 / 428] Compiling external/com_google_protobuf/src/google/protobuf/compiler/cpp/cpp_file.cc [for host]; 4s linux-sandbox ... (4 actions running)
[136 / 428] Compiling external/com_google_protobuf/src/google/protobuf/compiler/java/java_context.cc [for host]; 1s linux-sandbox ... (4 actions running)
[166 / 428] Compiling external/com_google_protobuf/src/google/protobuf/struct.pb.cc [for host]; 1s linux-sandbox ... (4 actions running)
[199 / 428] Compiling external/com_google_protobuf/src/google/protobuf/util/internal/protostream_objectsource.cc [for host]; 1s linux-sandbox ... (4 actions running)
[232 / 428] Compiling external/com_google_protobuf/src/google/protobuf/generated_message_table_driven.cc [for host]; 2s linux-sandbox ... (4 actions running)
[282 / 428] Compiling external/com_google_protobuf/src/google/protobuf/generated_message_table_driven_lite.cc; 3s linux-sandbox ... (4 actions running)
[355 / 428] Compiling external/com_google_protobuf/src/google/protobuf/dynamic_message.cc; 1s linux-sandbox ... (4 actions running)
INFO: From Compiling algorithm.cc:
algorithm.cc: In member function 'const std::vector<std::shared_ptr<const automl_zero::Instruction> >& automl_zero::Algorithm::ComponentFunction(automl_zero::ComponentFunctionT) const':
algorithm.cc:172:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
algorithm.cc: In member function 'std::vector<std::shared_ptr<const automl_zero::Instruction> >* automl_zero::Algorithm::MutableComponentFunction(automl_zero::ComponentFunctionT)':
algorithm.cc:184:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
INFO: From Compiling compute_cost.cc:
compute_cost.cc: In function 'double automl_zero::ComputeCost(const automl_zero::Instruction&)':
compute_cost.cc:173:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
INFO: From Compiling fec_hashing.cc:
In file included from fec_hashing.h:21:0,
                 from fec_hashing.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
INFO: From Compiling fec_cache.cc:
In file included from fec_cache.h:24:0,
                 from fec_cache.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
fec_cache.cc: In member function 'void automl_zero::LRUCache::MaybeResize()':
fec_cache.cc:92:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   while (list_.size() > max_size_) {
          ~~~~~~~~~~~~~^~~~~~~~~~~
INFO: From Compiling mutator.cc:
mutator.cc: In member function 'void automl_zero::Mutator::InsertInstruction(automl_zero::Algorithm*)':
mutator.cc:253:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
       if (algorithm->setup_.size() >= setup_size_max_ - 1) return;
           ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
mutator.cc:259:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
       if (algorithm->predict_.size() >= predict_size_max_ - 1) return;
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
mutator.cc:265:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
       if (algorithm->learn_.size() >= learn_size_max_ - 1) return;
           ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
In file included from definitions.h:34:0,
                 from instruction.h:24,
                 from algorithm.h:24,
                 from mutator.h:21,
                 from mutator.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GTImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
mutator.cc:343:3:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
 ^~~~~~~~~~~~~~~~~~~~
mutator.cc:271:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]
   InsertInstructionUnconditionally(op, component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
mutator.cc:271:35: warning: 'op' may be used uninitialized in this function [-Wmaybe-uninitialized]
mutator.cc: In member function 'void automl_zero::Mutator::RemoveInstruction(automl_zero::Algorithm*)':
mutator.cc:293:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]
   RemoveInstructionUnconditionally(component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
mutator.cc: In member function 'void automl_zero::Mutator::TradeInstruction(automl_zero::Algorithm*)':
mutator.cc:317:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]
   RemoveInstructionUnconditionally(component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
mutator.cc:316:35: warning: 'op' may be used uninitialized in this function [-Wmaybe-uninitialized]
   InsertInstructionUnconditionally(op, component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
INFO: From Compiling regularized_evolution.cc:
In file included from fec_cache.h:24:0,
                 from evaluator.h:28,
                 from regularized_evolution.h:26,
                 from regularized_evolution.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
INFO: From Compiling run_search_experiment.cc:
In file included from task_util.h:26:0,
                 from run_search_experiment.cc:25:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
[399 / 428] Compiling task_util.cc; 10s linux-sandbox ... (4 actions running)
INFO: From Compiling evaluator.cc:
In file included from fec_cache.h:24:0,
                 from evaluator.h:28,
                 from evaluator.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
evaluator.cc: In member function 'double automl_zero::Evaluator::Evaluate(const automl_zero::Algorithm&)':
evaluator.cc:89:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (IntegerT i = 0; i < tasks_.size(); ++i) {
                        ~~^~~~~~~~~~~~~~~
In file included from definitions.h:34:0,
                 from instruction.h:24,
                 from algorithm.h:24,
                 from evaluator.h:23,
                 from evaluator.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GTImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
evaluator.cc:78:3:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
 ^~~~~~~~~~~~~~~~~~~~
In file included from evaluator.h:24:0,
                 from evaluator.cc:15:
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 2]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'
evaluator.cc:118:75:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 2]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'
evaluator.cc:118:75:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 4]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 4]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 4; automl_zero::IntegerT = long int]'
evaluator.cc:122:75:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 4]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 4]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 4; automl_zero::IntegerT = long int]'
evaluator.cc:122:75:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 8]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 8]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 8; automl_zero::IntegerT = long int]'
evaluator.cc:126:75:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 8]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 8]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 8; automl_zero::IntegerT = long int]'
evaluator.cc:126:75:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 16]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 16]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 16; automl_zero::IntegerT = long int]'
evaluator.cc:130:76:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 16]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 16]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 16; automl_zero::IntegerT = long int]'
evaluator.cc:130:76:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 32]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 32]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 32; automl_zero::IntegerT = long int]'
evaluator.cc:134:76:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 32]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 32]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 32; automl_zero::IntegerT = long int]'
evaluator.cc:134:76:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from definitions.h:34:0,
                 from instruction.h:24,
                 from algorithm.h:24,
                 from evaluator.h:23,
                 from evaluator.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_LEImpl(const T1&, const T2&, const char*) [with T1 = long int; T2 = long unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
task.h:315:5:   required from 'void automl_zero::TaskIterator<F>::Next() [with int F = 2]'
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'
evaluator.cc:118:75:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:730:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_LE, <=)
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:730:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_LE, <=)
 ^~~~~~~~~~~~~~~~~~~~
In file included from fec_cache.h:24:0,
                 from evaluator.h:28,
                 from evaluator.cc:15:
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
   double fitness;
          ^~~~~~~
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
INFO: From Compiling task_util.cc:
In file included from task_util.h:26:0,
                 from task_util.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
task_util.cc: In function 'void automl_zero::FillTasksFromTaskSpec(const automl_zero::TaskSpec&, std::vector<std::unique_ptr<automl_zero::TaskInterface> >*)':
task_util.cc:93:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         i < first_param_seeds.size() ? first_param_seeds[i] : param_seed + 1;
         ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
task_util.cc:95:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         i < first_data_seeds.size() ? first_data_seeds[i] : data_seed + 1;
         ~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from task_util.cc:15:0:
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:101:73:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
In file included from definitions.h:34:0,
                 from task.h:27,
                 from task_util.h:23,
                 from task_util.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_EQImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
task_util.h:528:3:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:101:73:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:728:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:728:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
 ^~~~~~~~~~~~~~~~~~~~
In file included from task_util.cc:15:0:
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 4; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 4; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:105:73:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 8; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 8; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:109:73:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 16; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 16; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:113:74:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 32; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 32; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:117:74:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
In file included from definitions.h:34:0,
                 from task.h:27,
                 from task_util.h:23,
                 from task_util.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GEImpl(const T1&, const T2&, const char*) [with T1 = int; T2 = long unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
task_util.h:217:5:   required from 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:101:73:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:732:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_GE, >=)
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:732:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_GE, >=)
 ^~~~~~~~~~~~~~~~~~~~
task_util.cc:95:37: warning: 'data_seed' may be used uninitialized in this function [-Wmaybe-uninitialized]
         i < first_data_seeds.size() ? first_data_seeds[i] : data_seed + 1;
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
task_util.cc:93:38: warning: 'param_seed' may be used uninitialized in this function [-Wmaybe-uninitialized]
         i < first_param_seeds.size() ? first_param_seeds[i] : param_seed + 1;
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Target //:run_search_experiment up-to-date:
  bazel-bin/run_search_experiment
INFO: Elapsed time: 157.754s, Critical Path: 38.33s
INFO: 412 processes: 412 linux-sandbox.
INFO: Build completed successfully, 415 total actions
INFO: Running command line: bazel-bin/run_search_experiment '--search_experiment_spec=     search_tasks {       tasks {         projected_binary_classification_task {           dataset_name: '\''logic_multiply'\''           path: '\''/home/ubuntu/codes/google-research/automl_zero/binary_logic_data/'\''           held_out_pairs {positive_class: 0 negative_class: 1}           max_supported_data_seed: 1         }         features_size: 2         num_train_examples: 145151         num_valid_examples: 20736         num_train_epochs: 1         num_tasks: 1         eval_type: ACCURACY       }     }     setup_ops: [SCALAR_PRODUCT_OP, SCALAR_SUM_OP, SCALAR_HEAVYSIDE_OP, VECTOR_MEAN_OP]     predict_ops: [SCALAR_PRODUCT_OP, SCALAR_SUM_OP, SCALAR_HEAVYSIDE_OP, VECTOR_MEAN_OP]     learn_ops: [SCALAR_PRODUCT_OP, SCALAR_SUM_OP, SCALAR_HEAVYSIDE_OP, VECTOR_MEAN_OP]     setup_size_init: 1     mutate_setup_size_min: 1     mutate_setup_size_max: 3     predict_size_init: 1     mutate_predict_size_min: 1     mutate_predict_size_max: 5     learn_size_init: 1     mutate_learn_size_min: 1     mutate_learn_size_max: 8     train_budget {train_budget_baseline: NEURAL_NET_ALGORITHM}     fitness_combination_mode: MEAN_FITNESS_COMBINATION     population_size: 1000     tournament_size: 100     initial_population: NO_OP_ALGORITHM     max_train_steps: 100000000000     allowed_mutation_types {
      mutation_types: [RANDOMIZE_COMPONENT_FUNCTION_MUTATION_TYPE, INSERT_INSTRUCTION_MUTATION_TYPE, REMOVE_INSTRUCTION_MUTATION_TYPE]     }     mutate_prob: 0.9     progress_every: 10000     ' '--final_tasks=
    tasks {       projected_binary_classification_task {         dataset_name: '\''logic_multiply'\''         path: '\''/home/ubuntu/codes/google-research/automl_zero/binary_logic_data/'\''         held_out_pairs {positive_class: 0 negative_class: 1}         max_supported_data_seed: 1       }       features_size: 2       num_train_examples: 145151       num_valid_examples: 20736       num_train_epochs: 1       num_tasks: 1       eval_type: ACCURACY     }     ' '--random_seed=2081894615' '--select_tasks=
    tasks {       projected_binary_classification_task {         dataset_name: '\''logic_multiply'\''         path: '\''/home/ubuntu/codes/google-research/automl_zero/binary_logic_data/'\''         held_out_pairs {positive_class: 0 negative_class: 1}         max_supported_data_seed: 1       }       features_size: 2       num_train_examples: 145151       num_valid_examples: 20736       num_train_epochs: 1       num_tasks: 10       eval_type: ACCURACY     }     '
INFO: Build completed successfully, 415 total actions
Random seed = 2081894615
WARNING: Logging before InitGoogleLogging() is written to STDERR
F20200604 08:32:11.814043  2970 task_util.h:218] Check failed: saved_dataset.train_features_size() >= buffer->train_features_.size() (93 vs. 145151) Not enough training examples in /home/ubuntu/codes/google-research/automl_zero/binary_logic_data//binary_logic_multiply-pos_2-neg_4-dim_2-seed_0
*** Check failure stack trace: ***
Aborted (core dumped)
Loading: 
Loading: 0 packages loaded
INFO: Build option --copt has changed, discarding analysis cache.
Analyzing: target //:run_search_experiment (0 packages loaded, 0 targets configured)
INFO: Analyzed target //:run_search_experiment (0 packages loaded, 1466 targets configured).
INFO: Found 1 target...
[0 / 1] [Prepa] BazelWorkspaceStatusAction stable-status.txt
[215 / 428] Compiling experiment_util.cc; 1s linux-sandbox ... (4 actions, 3 running)
[221 / 428] Compiling compute_cost.cc; 1s linux-sandbox ... (4 actions, 3 running)
INFO: From Compiling compute_cost.cc:
compute_cost.cc: In function 'double automl_zero::ComputeCost(const automl_zero::Instruction&)':
compute_cost.cc:173:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
INFO: From Compiling fec_cache.cc:
In file included from fec_cache.h:24:0,
                 from fec_cache.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
fec_cache.cc: In member function 'void automl_zero::LRUCache::MaybeResize()':
fec_cache.cc:92:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   while (list_.size() > max_size_) {
          ~~~~~~~~~~~~~^~~~~~~~~~~
[229 / 428] Compiling external/com_google_absl/absl/strings/internal/str_format/arg.cc; 0s linux-sandbox ... (4 actions, 3 running)
[237 / 428] Compiling external/com_google_absl/absl/flags/marshalling.cc; 1s linux-sandbox ... (3 actions running)
[245 / 428] Compiling external/com_google_protobuf/src/google/protobuf/stubs/status.cc; 0s linux-sandbox ... (4 actions running)
[250 / 428] Compiling external/com_google_protobuf/src/google/protobuf/text_format.cc; 1s linux-sandbox ... (4 actions running)
[253 / 428] Compiling external/com_google_protobuf/src/google/protobuf/text_format.cc; 2s linux-sandbox ... (4 actions running)
[256 / 428] Compiling external/com_google_protobuf/src/google/protobuf/text_format.cc; 3s linux-sandbox ... (4 actions running)
[262 / 428] Compiling external/com_google_protobuf/src/google/protobuf/wrappers.pb.cc; 0s linux-sandbox ... (4 actions running)
[265 / 428] Compiling external/com_google_protobuf/src/google/protobuf/util/type_resolver_util.cc; 1s linux-sandbox ... (4 actions running)
[272 / 428] Compiling external/com_google_protobuf/src/google/protobuf/util/internal/protostream_objectsource.cc; 1s linux-sandbox ... (4 actions running)
[280 / 428] Compiling external/com_google_protobuf/src/google/protobuf/wire_format.cc; 2s linux-sandbox ... (4 actions running)
[294 / 428] Compiling external/com_google_protobuf/src/google/protobuf/repeated_field.cc; 1s linux-sandbox ... (4 actions, 3 running)
[306 / 428] Compiling generator.cc; 2s linux-sandbox ... (4 actions, 3 running)
[326 / 428] Compiling external/com_google_protobuf/src/google/protobuf/descriptor.pb.cc; 3s linux-sandbox ... (4 actions, 3 running)
INFO: From Compiling regularized_evolution.cc:
In file included from fec_cache.h:24:0,
                 from evaluator.h:28,
                 from regularized_evolution.h:26,
                 from regularized_evolution.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
[339 / 428] Compiling external/com_google_protobuf/src/google/protobuf/type.pb.cc; 0s linux-sandbox ... (4 actions, 3 running)
[352 / 428] Compiling external/com_google_protobuf/src/google/protobuf/generated_message_table_driven_lite.cc; 2s linux-sandbox ... (4 actions, 3 running)
[368 / 428] Compiling external/com_google_protobuf/src/google/protobuf/generated_message_reflection.cc; 3s linux-sandbox ... (4 actions, 3 running)
INFO: From Compiling run_search_experiment.cc:
In file included from task_util.h:26:0,
                 from run_search_experiment.cc:25:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
INFO: From Compiling algorithm.cc:
algorithm.cc: In member function 'const std::vector<std::shared_ptr<const automl_zero::Instruction> >& automl_zero::Algorithm::ComponentFunction(automl_zero::ComponentFunctionT) const':
algorithm.cc:172:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
algorithm.cc: In member function 'std::vector<std::shared_ptr<const automl_zero::Instruction> >* automl_zero::Algorithm::MutableComponentFunction(automl_zero::ComponentFunctionT)':
algorithm.cc:184:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
INFO: From Compiling fec_hashing.cc:
In file included from fec_hashing.h:21:0,
                 from fec_hashing.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
[379 / 428] Compiling task_util.cc; 8s linux-sandbox ... (4 actions running)
[392 / 428] Compiling task_util.cc; 16s linux-sandbox ... (4 actions, 3 running)
INFO: From Compiling task_util.cc:
In file included from task_util.h:26:0,
                 from task_util.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
task_util.cc: In function 'void automl_zero::FillTasksFromTaskSpec(const automl_zero::TaskSpec&, std::vector<std::unique_ptr<automl_zero::TaskInterface> >*)':
task_util.cc:93:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         i < first_param_seeds.size() ? first_param_seeds[i] : param_seed + 1;
         ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
task_util.cc:95:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         i < first_data_seeds.size() ? first_data_seeds[i] : data_seed + 1;
         ~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from task_util.cc:15:0:
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:101:73:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
In file included from definitions.h:34:0,
                 from task.h:27,
                 from task_util.h:23,
                 from task_util.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_EQImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
task_util.h:528:3:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:101:73:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:728:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:728:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
 ^~~~~~~~~~~~~~~~~~~~
In file included from task_util.cc:15:0:
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 4; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 4; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:105:73:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 8; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 8; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:109:73:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 16; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 16; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:113:74:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 32; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 32; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:117:74:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
In file included from definitions.h:34:0,
                 from task.h:27,
                 from task_util.h:23,
                 from task_util.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GEImpl(const T1&, const T2&, const char*) [with T1 = int; T2 = long unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
task_util.h:217:5:   required from 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:101:73:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:732:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_GE, >=)
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:732:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_GE, >=)
 ^~~~~~~~~~~~~~~~~~~~
task_util.cc:95:37: warning: 'data_seed' may be used uninitialized in this function [-Wmaybe-uninitialized]
         i < first_data_seeds.size() ? first_data_seeds[i] : data_seed + 1;
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
task_util.cc:93:38: warning: 'param_seed' may be used uninitialized in this function [-Wmaybe-uninitialized]
         i < first_param_seeds.size() ? first_param_seeds[i] : param_seed + 1;
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
INFO: From Compiling mutator.cc:
mutator.cc: In member function 'void automl_zero::Mutator::InsertInstruction(automl_zero::Algorithm*)':
mutator.cc:253:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
       if (algorithm->setup_.size() >= setup_size_max_ - 1) return;
           ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
mutator.cc:259:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
       if (algorithm->predict_.size() >= predict_size_max_ - 1) return;
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
mutator.cc:265:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
       if (algorithm->learn_.size() >= learn_size_max_ - 1) return;
           ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
In file included from definitions.h:34:0,
                 from instruction.h:24,
                 from algorithm.h:24,
                 from mutator.h:21,
                 from mutator.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GTImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
mutator.cc:343:3:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
 ^~~~~~~~~~~~~~~~~~~~
mutator.cc:271:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]
   InsertInstructionUnconditionally(op, component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
mutator.cc:271:35: warning: 'op' may be used uninitialized in this function [-Wmaybe-uninitialized]
mutator.cc: In member function 'void automl_zero::Mutator::RemoveInstruction(automl_zero::Algorithm*)':
mutator.cc:293:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]
   RemoveInstructionUnconditionally(component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
mutator.cc: In member function 'void automl_zero::Mutator::TradeInstruction(automl_zero::Algorithm*)':
mutator.cc:317:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]
   RemoveInstructionUnconditionally(component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
mutator.cc:316:35: warning: 'op' may be used uninitialized in this function [-Wmaybe-uninitialized]
   InsertInstructionUnconditionally(op, component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
[426 / 428] Compiling evaluator.cc; 7s linux-sandbox
INFO: From Compiling evaluator.cc:
In file included from fec_cache.h:24:0,
                 from evaluator.h:28,
                 from evaluator.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
evaluator.cc: In member function 'double automl_zero::Evaluator::Evaluate(const automl_zero::Algorithm&)':
evaluator.cc:89:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (IntegerT i = 0; i < tasks_.size(); ++i) {
                        ~~^~~~~~~~~~~~~~~
In file included from definitions.h:34:0,
                 from instruction.h:24,
                 from algorithm.h:24,
                 from evaluator.h:23,
                 from evaluator.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GTImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
evaluator.cc:78:3:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
 ^~~~~~~~~~~~~~~~~~~~
In file included from evaluator.h:24:0,
                 from evaluator.cc:15:
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 2]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'
evaluator.cc:118:75:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 2]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'
evaluator.cc:118:75:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 4]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 4]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 4; automl_zero::IntegerT = long int]'
evaluator.cc:122:75:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 4]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 4]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 4; automl_zero::IntegerT = long int]'
evaluator.cc:122:75:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 8]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 8]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 8; automl_zero::IntegerT = long int]'
evaluator.cc:126:75:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 8]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 8]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 8; automl_zero::IntegerT = long int]'
evaluator.cc:126:75:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 16]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 16]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 16; automl_zero::IntegerT = long int]'
evaluator.cc:130:76:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 16]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 16]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 16; automl_zero::IntegerT = long int]'
evaluator.cc:130:76:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 32]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 32]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 32; automl_zero::IntegerT = long int]'
evaluator.cc:134:76:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 32]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 32]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 32; automl_zero::IntegerT = long int]'
evaluator.cc:134:76:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from definitions.h:34:0,
                 from instruction.h:24,
                 from algorithm.h:24,
                 from evaluator.h:23,
                 from evaluator.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_LEImpl(const T1&, const T2&, const char*) [with T1 = long int; T2 = long unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
task.h:315:5:   required from 'void automl_zero::TaskIterator<F>::Next() [with int F = 2]'
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'
evaluator.cc:118:75:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:730:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_LE, <=)
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:730:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_LE, <=)
 ^~~~~~~~~~~~~~~~~~~~
In file included from fec_cache.h:24:0,
                 from evaluator.h:28,
                 from evaluator.cc:15:
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
   double fitness;
          ^~~~~~~
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
Target //:run_search_experiment up-to-date:
  bazel-bin/run_search_experiment
INFO: Elapsed time: 81.170s, Critical Path: 26.21s
INFO: 215 processes: 215 linux-sandbox.
INFO: Build completed successfully, 216 total actions
INFO: Running command line: bazel-bin/run_search_experiment '--search_experiment_spec=     search_tasks {       tasks {         projected_binary_classification_task {           dataset_name: '\''logic_multiply'\''           path: '\''/home/ubuntu/codes/google-research/automl_zero/binary_logic_data/'\''           held_out_pairs {positive_class: 0 negative_class: 1}           max_supported_data_seed: 1         }         features_size: 2         num_train_examples: 145151         num_valid_examples: 20736         num_train_epochs: 1         num_tasks: 1         eval_type: ACCURACY       }     }     setup_ops: [SCALAR_PRODUCT_OP, SCALAR_SUM_OP, SCALAR_HEAVYSIDE_OP, VECTOR_MEAN_OP]     predict_ops: [SCALAR_PRODUCT_OP, SCALAR_SUM_OP, SCALAR_HEAVYSIDE_OP, VECTOR_MEAN_OP]     learn_ops: [SCALAR_PRODUCT_OP, SCALAR_SUM_OP, SCALAR_HEAVYSIDE_OP, VECTOR_MEAN_OP]     setup_size_init: 1     mutate_setup_size_min: 1     mutate_setup_size_max: 8     predict_size_init: 1     mutate_predict_size_min: 1     mutate_predict_size_max: 13     learn_size_init: 1     mutate_learn_size_min: 1     mutate_learn_size_max: 21     train_budget {train_budget_baseline: NEURAL_NET_ALGORITHM}     fitness_combination_mode: MEAN_FITNESS_COMBINATION     population_size: 1000     tournament_size: 100     initial_population: NO_OP_ALGORITHM     max_train_steps: 100000000000     allowed_mutation_types {
      mutation_types: [RANDOMIZE_COMPONENT_FUNCTION_MUTATION_TYPE, INSERT_INSTRUCTION_MUTATION_TYPE, REMOVE_INSTRUCTION_MUTATION_TYPE]     }     mutate_prob: 0.9     progress_every: 10000     ' '--final_tasks=
    tasks {       projected_binary_classification_task {         dataset_name: '\''logic_multiply'\''         path: '\''/home/ubuntu/codes/google-research/automl_zero/binary_logic_data/'\''         held_out_pairs {positive_class: 0 negative_class: 1}         max_supported_data_seed: 1       }       features_size: 2       num_train_examples: 145151       num_valid_examples: 20736       num_train_epochs: 1       num_tasks: 1       eval_type: ACCURACY     }     ' '--random_seed=2081894615' '--select_tasks=
    tasks {       projected_binary_classification_task {         dataset_name: '\''logic_multiply'\''         path: '\''/home/ubuntu/codes/google-research/automl_zero/binary_logic_data/'\''         held_out_pairs {positive_class: 0 negative_class: 1}         max_supported_data_seed: 1       }       features_size: 2       num_train_examples: 145151       num_valid_examples: 20736       num_train_epochs: 1       num_tasks: 10       eval_type: ACCURACY     }     '
INFO: Build completed successfully, 216 total actions
Random seed = 2081894615
WARNING: Logging before InitGoogleLogging() is written to STDERR
F20200604 08:40:37.379341  5325 task_util.h:218] Check failed: saved_dataset.train_features_size() >= buffer->train_features_.size() (93 vs. 145151) Not enough training examples in /home/ubuntu/codes/google-research/automl_zero/binary_logic_data//binary_logic_multiply-pos_2-neg_4-dim_2-seed_0
*** Check failure stack trace: ***
Aborted (core dumped)
Loading: 
Loading: 0 packages loaded
Analyzing: target //:run_search_experiment (0 packages loaded, 0 targets configured)
INFO: Analyzed target //:run_search_experiment (1 packages loaded, 2 targets configured).
INFO: Found 1 target...
[1 / 220] [Prepa] BazelWorkspaceStatusAction stable-status.txt
[62 / 462] Compiling external/com_google_protobuf/src/google/protobuf/generated_message_table_driven_lite.cc [for host]; 1s linux-sandbox ... (4 actions, 3 running)
[64 / 462] Compiling external/com_google_protobuf/src/google/protobuf/generated_message_table_driven_lite.cc [for host]; 2s linux-sandbox ... (4 actions running)
[69 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/java/java_string_field_lite.cc [for host]; 1s linux-sandbox ... (4 actions, 3 running)
[72 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/objectivec/objectivec_field.cc [for host]; 1s linux-sandbox ... (4 actions running)
[76 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/js/js_generator.cc [for host]; 2s linux-sandbox ... (4 actions, 3 running)
[79 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/js/js_generator.cc [for host]; 3s linux-sandbox ... (4 actions running)
[83 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/js/js_generator.cc [for host]; 4s linux-sandbox ... (4 actions running)
[85 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/js/js_generator.cc [for host]; 6s linux-sandbox ... (4 actions, 3 running)
[91 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/objectivec/objectivec_message.cc [for host]; 2s linux-sandbox ... (4 actions, 3 running)
[95 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/java/java_message_builder.cc [for host]; 1s linux-sandbox ... (4 actions, 3 running)
[99 / 462] Compiling external/com_google_protobuf/src/google/protobuf/descriptor.pb.cc [for host]; 4s linux-sandbox ... (4 actions, 3 running)
[105 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/command_line_interface.cc [for host]; 2s linux-sandbox ... (4 actions, 3 running)
[113 / 462] Compiling external/com_google_protobuf/src/google/protobuf/message.cc [for host]; 1s linux-sandbox ... (4 actions, 3 running)
[127 / 462] Compiling external/com_google_protobuf/src/google/protobuf/text_format.cc [for host]; 2s linux-sandbox ... (4 actions, 3 running)
[143 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/python/python_generator.cc [for host]; 1s linux-sandbox ... (4 actions, 2 running)
[158 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/cpp/cpp_helpers.cc [for host]; 1s linux-sandbox ... (4 actions, 3 running)
[171 / 462] Compiling external/com_google_protobuf/src/google/protobuf/compiler/cpp/cpp_extension.cc [for host]; 1s linux-sandbox ... (4 actions, 3 running)
[185 / 462] Compiling external/com_google_protobuf/src/google/protobuf/descriptor.cc [for host]; 6s linux-sandbox ... (4 actions, 3 running)
[205 / 462] Compiling external/com_google_protobuf/src/google/protobuf/wire_format.cc [for host]; 2s linux-sandbox ... (4 actions, 3 running)
[233 / 463] Compiling external/com_google_protobuf/src/google/protobuf/compiler/cpp/cpp_message.cc [for host]; 4s linux-sandbox ... (4 actions, 3 running)
INFO: From Compiling regularized_evolution.cc:
In file included from fec_cache.h:24:0,
                 from evaluator.h:28,
                 from regularized_evolution.h:26,
                 from regularized_evolution.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
[352 / 534] Compiling external/com_google_protobuf/src/google/protobuf/repeated_field.cc; 1s linux-sandbox ... (4 actions, 3 running)
[405 / 534] Compiling external/com_google_absl/absl/strings/internal/str_format/parser.cc; 0s linux-sandbox ... (4 actions, 3 running)
INFO: From Compiling compute_cost.cc:
compute_cost.cc: In function 'double automl_zero::ComputeCost(const automl_zero::Instruction&)':
compute_cost.cc:173:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
INFO: From Compiling fec_hashing.cc:
In file included from fec_hashing.h:21:0,
                 from fec_hashing.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
INFO: From Compiling fec_cache.cc:
In file included from fec_cache.h:24:0,
                 from fec_cache.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
fec_cache.cc: In member function 'void automl_zero::LRUCache::MaybeResize()':
fec_cache.cc:92:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   while (list_.size() > max_size_) {
          ~~~~~~~~~~~~~^~~~~~~~~~~
INFO: From Compiling algorithm.cc:
algorithm.cc: In member function 'const std::vector<std::shared_ptr<const automl_zero::Instruction> >& automl_zero::Algorithm::ComponentFunction(automl_zero::ComponentFunctionT) const':
algorithm.cc:172:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
algorithm.cc: In member function 'std::vector<std::shared_ptr<const automl_zero::Instruction> >* automl_zero::Algorithm::MutableComponentFunction(automl_zero::ComponentFunctionT)':
algorithm.cc:184:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
INFO: From Compiling mutator.cc:
mutator.cc: In member function 'void automl_zero::Mutator::InsertInstruction(automl_zero::Algorithm*)':
mutator.cc:253:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
       if (algorithm->setup_.size() >= setup_size_max_ - 1) return;
           ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
mutator.cc:259:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
       if (algorithm->predict_.size() >= predict_size_max_ - 1) return;
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
mutator.cc:265:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
       if (algorithm->learn_.size() >= learn_size_max_ - 1) return;
           ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
In file included from definitions.h:34:0,
                 from instruction.h:24,
                 from algorithm.h:24,
                 from mutator.h:21,
                 from mutator.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GTImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
mutator.cc:343:3:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
 ^~~~~~~~~~~~~~~~~~~~
mutator.cc:271:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]
   InsertInstructionUnconditionally(op, component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
mutator.cc:271:35: warning: 'op' may be used uninitialized in this function [-Wmaybe-uninitialized]
mutator.cc: In member function 'void automl_zero::Mutator::RemoveInstruction(automl_zero::Algorithm*)':
mutator.cc:293:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]
   RemoveInstructionUnconditionally(component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
mutator.cc: In member function 'void automl_zero::Mutator::TradeInstruction(automl_zero::Algorithm*)':
mutator.cc:317:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]
   RemoveInstructionUnconditionally(component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
mutator.cc:316:35: warning: 'op' may be used uninitialized in this function [-Wmaybe-uninitialized]
   InsertInstructionUnconditionally(op, component_function);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
[453 / 534] Compiling instruction.cc; 1s linux-sandbox ... (4 actions, 3 running)
[517 / 535] Compiling task_util.cc; 4s linux-sandbox ... (4 actions, 3 running)
INFO: From Compiling run_search_experiment.cc:
In file included from task_util.h:26:0,
                 from run_search_experiment.cc:25:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
INFO: From Compiling task_util.cc:
In file included from task_util.h:26:0,
                 from task_util.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
task_util.cc: In function 'void automl_zero::FillTasksFromTaskSpec(const automl_zero::TaskSpec&, std::vector<std::unique_ptr<automl_zero::TaskInterface> >*)':
task_util.cc:93:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         i < first_param_seeds.size() ? first_param_seeds[i] : param_seed + 1;
         ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
task_util.cc:95:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         i < first_data_seeds.size() ? first_data_seeds[i] : data_seed + 1;
         ~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from task_util.cc:15:0:
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:101:73:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
In file included from definitions.h:34:0,
                 from task.h:27,
                 from task_util.h:23,
                 from task_util.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_EQImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
task_util.h:528:3:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:101:73:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:728:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:728:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
 ^~~~~~~~~~~~~~~~~~~~
In file included from task_util.cc:15:0:
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 4; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 4; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:105:73:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 8; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 8; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:109:73:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 16; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 16; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:113:74:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
task_util.h: In instantiation of 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 32; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]':
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 32; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:117:74:   required from here
task_util.h:227:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->train_features_.size(); ++k)  {
task_util.h:240:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (IntegerT k = 0; k < buffer->valid_features_.size(); ++k)  {
In file included from definitions.h:34:0,
                 from task.h:27,
                 from task_util.h:23,
                 from task_util.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GEImpl(const T1&, const T2&, const char*) [with T1 = int; T2 = long unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
task_util.h:217:5:   required from 'static void automl_zero::ProjectedBinaryClassificationTaskCreator<F>::Create(automl_zero::EvalType, const automl_zero::ProjectedBinaryClassificationTask&, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::TaskBuffer<F>*) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.h:483:58:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'
task_util.cc:101:73:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:732:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_GE, >=)
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:732:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_GE, >=)
 ^~~~~~~~~~~~~~~~~~~~
task_util.cc:95:37: warning: 'data_seed' may be used uninitialized in this function [-Wmaybe-uninitialized]
         i < first_data_seeds.size() ? first_data_seeds[i] : data_seed + 1;
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
task_util.cc:93:38: warning: 'param_seed' may be used uninitialized in this function [-Wmaybe-uninitialized]
         i < first_param_seeds.size() ? first_param_seeds[i] : param_seed + 1;
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
INFO: From Compiling evaluator.cc:
In file included from fec_cache.h:24:0,
                 from evaluator.h:28,
                 from evaluator.cc:15:
executor.h:822:10: warning: variable templates only available with -std=c++14 or -std=gnu++14
     128> kOpIndexToExecuteFunction = {
          ^~~~~~~~~~~~~~~~~~~~~~~~~
evaluator.cc: In member function 'double automl_zero::Evaluator::Evaluate(const automl_zero::Algorithm&)':
evaluator.cc:89:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (IntegerT i = 0; i < tasks_.size(); ++i) {
                        ~~^~~~~~~~~~~~~~~
In file included from definitions.h:34:0,
                 from instruction.h:24,
                 from algorithm.h:24,
                 from evaluator.h:23,
                 from evaluator.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GTImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
evaluator.cc:78:3:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:733:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_GT, > )
 ^~~~~~~~~~~~~~~~~~~~
In file included from evaluator.h:24:0,
                 from evaluator.cc:15:
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 2]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'
evaluator.cc:118:75:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 2]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'
evaluator.cc:118:75:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 4]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 4]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 4; automl_zero::IntegerT = long int]'
evaluator.cc:122:75:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 4]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 4]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 4; automl_zero::IntegerT = long int]'
evaluator.cc:122:75:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 8]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 8]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 8; automl_zero::IntegerT = long int]'
evaluator.cc:126:75:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 8]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 8]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 8; automl_zero::IntegerT = long int]'
evaluator.cc:126:75:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 16]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 16]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 16; automl_zero::IntegerT = long int]'
evaluator.cc:130:76:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 16]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 16]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 16; automl_zero::IntegerT = long int]'
evaluator.cc:130:76:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
task.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 32]':
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 32]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 32; automl_zero::IntegerT = long int]'
evaluator.cc:134:76:   required from here
task.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (current_example_ >= features_->size()) {
task.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 32]':
executor.h:1320:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 32]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 32; automl_zero::IntegerT = long int]'
evaluator.cc:134:76:   required from here
task.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     return current_epoch_ >= epochs_->size();
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from definitions.h:34:0,
                 from instruction.h:24,
                 from algorithm.h:24,
                 from evaluator.h:23,
                 from evaluator.cc:15:
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_LEImpl(const T1&, const T2&, const char*) [with T1 = long int; T2 = long unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
task.h:315:5:   required from 'void automl_zero::TaskIterator<F>::Next() [with int F = 2]'
executor.h:1319:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'
executor.h:1046:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'
evaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'
evaluator.cc:118:75:   required from here
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:730:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_LE, <=)
                                ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                     ^
bazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:730:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'
 DEFINE_CHECK_OP_IMPL(Check_LE, <=)
 ^~~~~~~~~~~~~~~~~~~~
In file included from fec_cache.h:24:0,
                 from evaluator.h:28,
                 from evaluator.cc:15:
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
   double fitness;
          ^~~~~~~
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
executor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]':
executor.h:1326:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]
Target //:run_search_experiment up-to-date:
  bazel-bin/run_search_experiment
INFO: Elapsed time: 152.269s, Critical Path: 32.27s
INFO: 412 processes: 412 linux-sandbox.
INFO: Build completed successfully, 415 total actions
INFO: Running command line: bazel-bin/run_search_experiment '--search_experiment_spec=     search_tasks {       tasks {         projected_binary_classification_task {           dataset_name: '\''logic_multiply'\''           path: '\''/home/ubuntu/codes/google-research/automl_zero/binary_logic_data/'\''           held_out_pairs {positive_class: 0 negative_class: 1}           max_supported_data_seed: 1         }         features_size: 2         num_train_examples: 145151         num_valid_examples: 20736         num_train_epochs: 1         num_tasks: 1         eval_type: ACCURACY       }     }     setup_ops: [SCALAR_PRODUCT_OP, SCALAR_SUM_OP, SCALAR_HEAVYSIDE_OP, VECTOR_MEAN_OP]     predict_ops: [SCALAR_PRODUCT_OP, SCALAR_SUM_OP, SCALAR_HEAVYSIDE_OP, VECTOR_MEAN_OP]     learn_ops: [SCALAR_PRODUCT_OP, SCALAR_SUM_OP, SCALAR_HEAVYSIDE_OP, VECTOR_MEAN_OP]     setup_size_init: 1     mutate_setup_size_min: 1     mutate_setup_size_max: 8     predict_size_init: 1     mutate_predict_size_min: 1     mutate_predict_size_max: 13     learn_size_init: 1     mutate_learn_size_min: 1     mutate_learn_size_max: 21     train_budget {train_budget_baseline: NEURAL_NET_ALGORITHM}     fitness_combination_mode: MEAN_FITNESS_COMBINATION     population_size: 1000     tournament_size: 100     initial_population: NO_OP_ALGORITHM     max_train_steps: 100000000000     allowed_mutation_types {
      mutation_types: [RANDOMIZE_COMPONENT_FUNCTION_MUTATION_TYPE, INSERT_INSTRUCTION_MUTATION_TYPE, REMOVE_INSTRUCTION_MUTATION_TYPE]     }     mutate_prob: 0.9     progress_every: 10000     ' '--final_tasks=
    tasks {       projected_binary_classification_task {         dataset_name: '\''logic_multiply'\''         path: '\''/home/ubuntu/codes/google-research/automl_zero/binary_logic_data/'\''         held_out_pairs {positive_class: 0 negative_class: 1}         max_supported_data_seed: 1       }       features_size: 2       num_train_examples: 145151       num_valid_examples: 20736       num_train_epochs: 1       num_tasks: 1       eval_type: ACCURACY     }     ' '--random_seed=2081894615' '--select_tasks=
    tasks {       projected_binary_classification_task {         dataset_name: '\''logic_multiply'\''         path: '\''/home/ubuntu/codes/google-research/automl_zero/binary_logic_data/'\''         held_out_pairs {positive_class: 0 negative_class: 1}         max_supported_data_seed: 1       }       features_size: 2       num_train_examples: 145151       num_valid_examples: 20736       num_train_epochs: 1       num_tasks: 10       eval_type: ACCURACY     }     '
INFO: Build completed successfully, 415 total actions
Random seed = 2081894615
Running evolution experiment (on the T_search tasks)...
indivs=1000, elapsed_secs=5, mean=0.980469, stdev=0.000000, best fit=0.980469,
indivs=11000, elapsed_secs=62, mean=0.967016, stdev=0.112901, best fit=0.980469,
indivs=21000, elapsed_secs=127, mean=0.963172, stdev=0.127758, best fit=0.980469,
indivs=31000, elapsed_secs=198, mean=0.969341, stdev=0.101706, best fit=0.980469,
indivs=41000, elapsed_secs=269, mean=0.952044, stdev=0.162115, best fit=0.980469,
indivs=51000, elapsed_secs=341, mean=0.961711, stdev=0.132071, best fit=0.980469,
indivs=61000, elapsed_secs=418, mean=0.937163, stdev=0.198280, best fit=0.980517,
indivs=71000, elapsed_secs=507, mean=0.937665, stdev=0.197759, best fit=0.980517,
indivs=81000, elapsed_secs=603, mean=0.940452, stdev=0.190284, best fit=0.980517,
indivs=91000, elapsed_secs=707, mean=0.931747, stdev=0.209300, best fit=0.980517,
indivs=101000, elapsed_secs=818, mean=0.916527, stdev=0.239095, best fit=0.980517,
indivs=111000, elapsed_secs=931, mean=0.921390, stdev=0.230407, best fit=0.980517,
indivs=121000, elapsed_secs=1047, mean=0.910817, stdev=0.248765, best fit=0.980517,
indivs=131000, elapsed_secs=1165, mean=0.906111, stdev=0.256388, best fit=0.980517,
indivs=141000, elapsed_secs=1285, mean=0.910763, stdev=0.247963, best fit=0.980517,
indivs=151000, elapsed_secs=1400, mean=0.890177, stdev=0.280443, best fit=0.980517,
indivs=161000, elapsed_secs=1515, mean=0.890638, stdev=0.279388, best fit=0.980517,
indivs=171000, elapsed_secs=1637, mean=0.887696, stdev=0.283466, best fit=0.980517,
indivs=181000, elapsed_secs=1760, mean=0.890081, stdev=0.279763, best fit=0.980517,
indivs=191000, elapsed_secs=1885, mean=0.879604, stdev=0.293045, best fit=0.980517,
indivs=201000, elapsed_secs=2008, mean=0.888294, stdev=0.282228, best fit=0.980517,
indivs=211000, elapsed_secs=2133, mean=0.896750, stdev=0.270233, best fit=0.980517,
indivs=221000, elapsed_secs=2256, mean=0.905552, stdev=0.256811, best fit=0.980517,
indivs=231000, elapsed_secs=2378, mean=0.925021, stdev=0.222639, best fit=0.980517,
indivs=241000, elapsed_secs=2495, mean=0.927250, stdev=0.219359, best fit=0.980517,
indivs=251000, elapsed_secs=2609, mean=0.926694, stdev=0.220950, best fit=0.980517,
indivs=261000, elapsed_secs=2724, mean=0.937207, stdev=0.198196, best fit=0.980517,
indivs=271000, elapsed_secs=2838, mean=0.928615, stdev=0.217199, best fit=0.980517,
indivs=281000, elapsed_secs=2950, mean=0.925174, stdev=0.223354, best fit=0.980517,
indivs=291000, elapsed_secs=3061, mean=0.936303, stdev=0.201311, best fit=0.980517,
indivs=301000, elapsed_secs=3169, mean=0.933420, stdev=0.207444, best fit=0.980517,
indivs=311000, elapsed_secs=3276, mean=0.927251, stdev=0.219356, best fit=0.980517,
indivs=321000, elapsed_secs=3383, mean=0.930537, stdev=0.213363, best fit=0.980517,
indivs=331000, elapsed_secs=3493, mean=0.911816, stdev=0.247106, best fit=0.980517,
indivs=341000, elapsed_secs=3607, mean=0.925271, stdev=0.223159, best fit=0.980517,
indivs=351000, elapsed_secs=3723, mean=0.911221, stdev=0.247643, best fit=0.980517,
indivs=361000, elapsed_secs=3843, mean=0.896443, stdev=0.271088, best fit=0.980517,
indivs=371000, elapsed_secs=3968, mean=0.890581, stdev=0.279477, best fit=0.980517,
indivs=381000, elapsed_secs=4097, mean=0.896904, stdev=0.270839, best fit=0.980517,
indivs=391000, elapsed_secs=4229, mean=0.895346, stdev=0.271848, best fit=0.980517,
indivs=401000, elapsed_secs=4360, mean=0.877126, stdev=0.297382, best fit=0.980517,
indivs=411000, elapsed_secs=4490, mean=0.887543, stdev=0.282063, best fit=0.980517,
indivs=421000, elapsed_secs=4619, mean=0.906919, stdev=0.255108, best fit=0.980517,
indivs=431000, elapsed_secs=4752, mean=0.882335, stdev=0.289473, best fit=0.980517,
indivs=441000, elapsed_secs=4883, mean=0.915968, stdev=0.239597, best fit=0.980517,
indivs=451000, elapsed_secs=5013, mean=0.919967, stdev=0.233483, best fit=0.980517,
indivs=461000, elapsed_secs=5137, mean=0.915261, stdev=0.240811, best fit=0.980517,
indivs=471000, elapsed_secs=5261, mean=0.913086, stdev=0.244532, best fit=0.980517,
indivs=481000, elapsed_secs=5384, mean=0.911722, stdev=0.247278, best fit=0.980517,
indivs=491000, elapsed_secs=5507, mean=0.939186, stdev=0.193756, best fit=0.980517,
indivs=501000, elapsed_secs=5635, mean=0.925733, stdev=0.222796, best fit=0.980517,
indivs=511000, elapsed_secs=5762, mean=0.922851, stdev=0.228220, best fit=0.980517,
indivs=521000, elapsed_secs=5885, mean=0.908995, stdev=0.251763, best fit=0.980517,
indivs=531000, elapsed_secs=6009, mean=0.929577, stdev=0.215291, best fit=0.980517,
indivs=541000, elapsed_secs=6132, mean=0.923310, stdev=0.226857, best fit=0.980517,
indivs=551000, elapsed_secs=6255, mean=0.927155, stdev=0.219533, best fit=0.980517,
indivs=561000, elapsed_secs=6382, mean=0.907473, stdev=0.253772, best fit=0.980517,
indivs=571000, elapsed_secs=6512, mean=0.920527, stdev=0.231989, best fit=0.980517,
indivs=581000, elapsed_secs=6640, mean=0.915162, stdev=0.241923, best fit=0.980517,
indivs=591000, elapsed_secs=6764, mean=0.917507, stdev=0.236398, best fit=0.980517,
indivs=601000, elapsed_secs=6891, mean=0.924772, stdev=0.224623, best fit=0.980517,
indivs=611000, elapsed_secs=7019, mean=0.908339, stdev=0.252368, best fit=0.980517,
indivs=621000, elapsed_secs=7150, mean=0.927098, stdev=0.219658, best fit=0.980517,
indivs=631000, elapsed_secs=7282, mean=0.936708, stdev=0.199872, best fit=0.980517,
indivs=641000, elapsed_secs=7415, mean=0.925176, stdev=0.222320, best fit=0.980517,
indivs=651000, elapsed_secs=7545, mean=0.933824, stdev=0.206054, best fit=0.980517,
indivs=661000, elapsed_secs=7673, mean=0.924215, stdev=0.225174, best fit=0.980517,
indivs=671000, elapsed_secs=7804, mean=0.910357, stdev=0.249985, best fit=0.980517,
indivs=681000, elapsed_secs=7934, mean=0.897711, stdev=0.268815, best fit=0.980517,
Experiment done. Retrieving candidate algorithm.
Search fitness for candidate algorithm = 0.980517
Evaluating candidate algorithm from experiment (on T_select tasks)... 
Select fitness for candidate algorithm = 0.980517
Select fitness is the best so far. 

Final evaluation of best algorithm (on unseen tasks)...
Final evaluation fitness (on unseen data) = 0.980517
Algorithm found: 
def Setup():
  s11 = s20 * s32
  s10 = s32 * s3
  s22 = heaviside(s30, 1.0)
  s23 = mean(v6)
  s11 = s5 * s2
  s12 = s30 + s28
  s13 = s10 + s14
def Predict():
  s6 = heaviside(s21, 1.0)
  s1 = heaviside(s19, 1.0)
  s27 = s16 * s31
  s4 = mean(v2)
  s17 = s2 + s6
  s13 = s22 + s32
  s28 = mean(v8)
  s22 = s17 * s8
  s19 = mean(v6)
  s6 = s12 + s31
  s28 = mean(v9)
def Learn():
  s4 = heaviside(s22, 1.0)
  s1 = heaviside(s1, 1.0)
  s32 = mean(v12)
  s24 = mean(v9)
  s7 = heaviside(s27, 1.0)
  s32 = s17 * s6
  s1 = s6 * s23
  s24 = s22 + s31
  s29 = mean(v2)
  s22 = s22 * s4
  s2 = heaviside(s3, 1.0)
  s19 = heaviside(s25, 1.0)
  s14 = heaviside(s24, 1.0)
  s32 = mean(v8)
  s10 = s4 + s23
  s31 = mean(v11)
  s9 = s13 * s29
  s13 = s25 + s24
  s15 = s17 + s3

